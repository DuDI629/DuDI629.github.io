<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>关于신예은的Blog的一件小事</title>
  
  <subtitle>喜欢是一个事</subtitle>
  <link href="https://dudi629.github.io/atom.xml" rel="self"/>
  
  <link href="https://dudi629.github.io/"/>
  <updated>2022-07-29T10:21:39.802Z</updated>
  <id>https://dudi629.github.io/</id>
  
  <author>
    <name>신예은Blog</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>闭包是什么？ 闭包可以做什么？ 具体作用是什么？ 什么时候可以使用到这闭包</title>
    <link href="https://dudi629.github.io/2022/07/29/Closures/"/>
    <id>https://dudi629.github.io/2022/07/29/Closures/</id>
    <published>2022-07-29T09:17:42.506Z</published>
    <updated>2022-07-29T10:21:39.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="闭包是什么？"><a href="#闭包是什么？" class="headerlink" title="闭包是什么？"></a>闭包是什么？</h2><h5 id="一个函数访问另外一个函数的作用域就叫闭包，还有很多种说法，例如-有权访问另外一个函数的作用域的变量的函数-或者-一个作用域的访问另外一个函数的作用域-或者很俗的话-就是一句函数内部嵌套函数，内部函数就是闭包，按照作者理解差不多一个意思了。"><a href="#一个函数访问另外一个函数的作用域就叫闭包，还有很多种说法，例如-有权访问另外一个函数的作用域的变量的函数-或者-一个作用域的访问另外一个函数的作用域-或者很俗的话-就是一句函数内部嵌套函数，内部函数就是闭包，按照作者理解差不多一个意思了。" class="headerlink" title="一个函数访问另外一个函数的作用域就叫闭包，还有很多种说法，例如 有权访问另外一个函数的作用域的变量的函数 或者 一个作用域的访问另外一个函数的作用域 或者很俗的话 就是一句函数内部嵌套函数，内部函数就是闭包，按照作者理解差不多一个意思了。"></a><strong>一个函数访问另外一个函数的作用域就叫闭包，还有很多种说法，例如 有权访问另外一个函数的作用域的变量的函数 或者 一个作用域的访问另外一个函数的作用域 或者很俗的话 就是一句函数内部嵌套函数，内部函数就是闭包，按照作者理解差不多一个意思了。</strong></h5><h4 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h4> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">let closures = (() =&gt; &#123;</span><br><span class="line">          function add(a, b) &#123;</span><br><span class="line">              return a + b;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          function subscribe() &#123;</span><br><span class="line">              return a - b;</span><br><span class="line">          &#125;</span><br><span class="line">          return &#123;</span><br><span class="line">              add,</span><br><span class="line">              subscribe</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)()</span><br><span class="line">  console.log(closures);</span><br><span class="line">  console.log(closures.add(10, 30))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue终极版 合集</title>
    <link href="https://dudi629.github.io/2022/07/20/Vue/"/>
    <id>https://dudi629.github.io/2022/07/20/Vue/</id>
    <published>2022-07-20T07:35:13.050Z</published>
    <updated>2022-07-20T07:35:29.316Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JavaScript 工具类 合集</title>
    <link href="https://dudi629.github.io/2022/07/20/javascript_util/"/>
    <id>https://dudi629.github.io/2022/07/20/javascript_util/</id>
    <published>2022-07-20T07:34:35.135Z</published>
    <updated>2022-07-20T07:34:52.360Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JavaScript 排序算法 合集</title>
    <link href="https://dudi629.github.io/2022/07/19/javascript/"/>
    <id>https://dudi629.github.io/2022/07/19/javascript/</id>
    <published>2022-07-19T07:02:36.222Z</published>
    <updated>2022-07-29T09:03:58.271Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a><strong>基础算法</strong></h2><h5 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1.冒泡排序"></a>1.冒泡排序</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let list = [1, 20, 2, 3, 65, 9, 7, 13, 10];</span><br><span class="line">for(let i=0; i&lt;list.length; i++)&#123;</span><br><span class="line">    for(let k=0; k&lt;list.length; k++)&#123;</span><br><span class="line">      if(list[i] &lt; list[k])&#123;</span><br><span class="line">          let temp = list[i];</span><br><span class="line">          list[i] = list[k];</span><br><span class="line">          list[k] = temp;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../javascript/bubbleSort.gif" alt="图片" loading="lazy"><br><img src="/../javascript/maopao.png" alt="图片" loading="lazy"></p><h5 id="2-插入排序"><a href="#2-插入排序" class="headerlink" title="2.插入排序"></a>2.插入排序</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">let list = [1, 20, 0, 3, 65, 9, 7, 13, 10];</span><br><span class="line">insertSort = (list) =&gt;&#123;</span><br><span class="line">  for(let i=0; i&lt;list.length; i++)&#123;</span><br><span class="line">    let temp = list[i];</span><br><span class="line">    let k = i-1;</span><br><span class="line">    while(list[k] &gt; temp)&#123;</span><br><span class="line">      list[k+1] = list[k];</span><br><span class="line">      k--</span><br><span class="line">    &#125;</span><br><span class="line">    list[k + 1] = temp</span><br><span class="line">  &#125;</span><br><span class="line">  return list;</span><br><span class="line">&#125;</span><br><span class="line">insertSort(list)</span><br><span class="line"></span><br><span class="line">####第二种插入排序</span><br><span class="line">function insertSort()&#123;</span><br><span class="line">  let list = [1, 20, 2, 3, 65, 9, 7, 13, 10];</span><br><span class="line">  for(let i=0; i&lt;list.length; i++)&#123;</span><br><span class="line">    let temp = list[i];</span><br><span class="line">    var k = i-1;</span><br><span class="line">    let d = i-1</span><br><span class="line">    for(k; k &gt;= 0; k--)&#123;</span><br><span class="line">      if(list[d] &gt; temp)&#123;</span><br><span class="line">        list[d+1] = list[d];</span><br><span class="line">        d--;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    list[d+1] = temp</span><br><span class="line">  &#125;</span><br><span class="line">  return list;</span><br><span class="line">&#125;</span><br><span class="line">insertSort();</span><br></pre></td></tr></table></figure><p><img src="/../javascript/insertionSort.gif" alt="图片" loading="lazy"><br><img src="/../javascript/insertSort.png" alt="图片" loading="lazy"></p><h5 id="3-快速排序"><a href="#3-快速排序" class="headerlink" title="3.快速排序"></a>3.快速排序</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * @param Array 有序list</span><br><span class="line">     * @param start_index</span><br><span class="line">     * @param end_index</span><br><span class="line">     * @return list</span><br><span class="line">     */ </span><br><span class="line">    let _quickSort = (left, right, nums) =&gt; &#123;</span><br><span class="line">        let swap = (left, right, nums) =&gt; &#123;</span><br><span class="line">            let temp = nums[left]</span><br><span class="line">            nums[left] = nums[right]</span><br><span class="line">            nums[right] = temp</span><br><span class="line">        &#125;</span><br><span class="line">        if (left &lt;= right) &#123;</span><br><span class="line">            let val = nums[left]</span><br><span class="line">            let [i, j] = [left, right]</span><br><span class="line"></span><br><span class="line">            while (i &lt; j) &#123;</span><br><span class="line">                while (i &lt; j &amp;&amp; nums[j] &gt; val) &#123;</span><br><span class="line">                    j--</span><br><span class="line">                &#125;</span><br><span class="line">                while (i &lt; j &amp;&amp; nums[i] &lt; val) &#123;</span><br><span class="line">                    i++</span><br><span class="line">                &#125;</span><br><span class="line">                if (i &lt; j) &#123;</span><br><span class="line">                    swap(i, j, nums)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            nums[i] = val</span><br><span class="line">            _quickSort(left, i - 1, nums)</span><br><span class="line">            _quickSort(i + 1, right, nums)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    let quickSort = (...numbers) =&gt; &#123;</span><br><span class="line">        _quickSort(0, numbers.length - 1, numbers)</span><br><span class="line">        return numbers</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/../javascript/quickSort.gif" alt="图片" loading="lazy"><br><img src="/../javascript/quickSort.jpg" alt="图片" loading="lazy"></p><h5 id="4-希尔排序"><a href="#4-希尔排序" class="headerlink" title="4.希尔排序"></a>4.希尔排序</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var arr = [49, 38, 65, 97, 76, 13, 27, 49, 55, 04];</span><br><span class="line">var len = arr.length;</span><br><span class="line">for (var fraction = Math.floor(len / 2); fraction &gt; 0; fraction = Math.floor(fraction / 2)) &#123;</span><br><span class="line">    for (var i = fraction; i &lt; len; i += fraction) &#123;</span><br><span class="line">        for (var j = i - fraction; j &gt;= 0 &amp;&amp; arr[j] &gt; arr[fraction + j]; j -= fraction) &#123;</span><br><span class="line">            var temp = arr[j];</span><br><span class="line">            arr[j] = arr[fraction + j];</span><br><span class="line">            arr[fraction + j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">![图片](../javascript/ShellSort.jpg)</span><br></pre></td></tr></table></figure><h5 id="5-选择排序"><a href="#5-选择排序" class="headerlink" title="5.选择排序"></a>5.选择排序</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">随意挑一个跟剩下的比较，取出最小的放到取下的那个位置，以此类推，</span><br><span class="line"></span><br><span class="line">###根据value保存</span><br><span class="line">function selectSort()&#123;</span><br><span class="line">  let list = [1, 20, 2, 3, 65, 9, 7, 13, 10];</span><br><span class="line"></span><br><span class="line">  for(let i=0; i &lt; list.length; i++)&#123;</span><br><span class="line">    let minval = list[i];</span><br><span class="line">    let minindex = i;</span><br><span class="line">    for(let j=i+1; j &lt; list.length; j++)&#123;</span><br><span class="line">      if(list[j] &lt; minval)&#123;</span><br><span class="line">        minindex = j;</span><br><span class="line">        minval = list[j];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    let temp = list[i];</span><br><span class="line">    list[i] = minval;</span><br><span class="line">    list[minindex] = temp</span><br><span class="line">  &#125;</span><br><span class="line">  return list;</span><br><span class="line">&#125;</span><br><span class="line">selectSort();</span><br><span class="line"></span><br><span class="line">console.log(&#x27;------------------------------------------------&#x27;)</span><br><span class="line">根据index保存</span><br><span class="line">function SelectSort()&#123;</span><br><span class="line">  let list = [1, 20, 2, 3, 65, 9, 7, 13, 10];</span><br><span class="line">  let temp,minIndex;</span><br><span class="line">  let len  = list.length;</span><br><span class="line"></span><br><span class="line">  for(let i=0; i&lt;len; i++)&#123;</span><br><span class="line">    minIndex = i;</span><br><span class="line">    for(let j=i+1; j&lt;len; j++)&#123;</span><br><span class="line">      if(list[minIndex] &gt; list[j] )&#123;</span><br><span class="line">        minIndex = j;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = list[i];</span><br><span class="line">    list[i] = list[minIndex];</span><br><span class="line">    list[minIndex] = temp</span><br><span class="line">  &#125;</span><br><span class="line">  return list;</span><br><span class="line">&#125;</span><br><span class="line">SelectSort();</span><br></pre></td></tr></table></figure><p><img src="/../javascript/selectionSort.gif" alt="图片" loading="lazy"><br><img src="/../javascript/selectSort.png" alt="图片" loading="lazy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://dudi629.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://dudi629.github.io/tags/JavaScript/"/>
    
    <category term="HTML" scheme="https://dudi629.github.io/tags/HTML/"/>
    
    <category term="CSS3" scheme="https://dudi629.github.io/tags/CSS3/"/>
    
    <category term="Jquery" scheme="https://dudi629.github.io/tags/Jquery/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://dudi629.github.io/2022/07/18/hello-world/"/>
    <id>https://dudi629.github.io/2022/07/18/hello-world/</id>
    <published>2022-07-18T07:26:26.065Z</published>
    <updated>2022-07-18T07:26:26.066Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
